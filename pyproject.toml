[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=65.5.0', 'wheel']

[project]
authors = [{name = 'ETH Zurich', email = 'subbiali@phys.ethz.ch'}]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Science/Research',
    'Operating System :: POSIX',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Scientific/Engineering :: Atmospheric Science',
]
dependencies = [
    # install from source for better typing
    'gt4py[dace] @ git+https://github.com/GridTools/gt4py.git@main',
    'numpy>=1.21',
    'pydantic>=1.9',
    'sympl @ git+https://github.com/stubbiali/sympl.git@oop'
]
description = 'Infrastructure code and convenient utilities to implement IFS physical parameterizations in Python.'
keywords = [
    'framework',
    'physical parameterizations',
]
#license = {text = 'Apache-2'}  # to be sorted out
name = 'ifs_physics_common'
readme = {file = 'README.md', content-type = 'text/markdown'}
requires-python = '>=3.8'
version = '0.0'

[project.optional-dependencies]
dev = ['black>=22.6.0', 'flake8', 'ipdb', 'ipython', 'mypy', 'pre-commit']

[project.urls]
Source = 'https://github.com/stubbiali/ifs_physics_common.git'

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.gt_cache
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.mypy]
plugins = 'numpy.typing.mypy_plugin'
python_version = '3.9'
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = 'cupy'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'sympl.*'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'gt4py.next.*'
follow_imports = 'skip'
ignore_missing_imports = true

[tool.setuptools]
platforms = ['Linux', 'Mac']

[tool.setuptools.packages]
find = {namespaces = false, where = ['src']}
